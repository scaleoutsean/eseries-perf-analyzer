user  nginx;
worker_processes  auto;

# Log to custom volume for tailing
error_log  /nginx-logs/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Custom access log for all servers
    access_log  /nginx-logs/access.log;
    # Docker embedded DNS resolver for runtime hostname resolution
    resolver 127.0.0.11 valid=30s;



    # InfluxDB Explorer over HTTPS
    server {
        listen 443 ssl default_server;
        server_name _;
        ssl_protocols     TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers       ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_ecdh_curve    X25519MLKEM768;
        ssl_certificate   /etc/nginx/ssl/tls.crt;
        ssl_certificate_key  /etc/nginx/ssl/tls.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        

        location / {
            proxy_pass https://explorer:443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
        }
    }

    # Direct InfluxDB Proxy over HTTPS
    server {
        listen 18181 ssl default_server;
        server_name _;
        ssl_protocols     TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers       ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_ecdh_curve    X25519MLKEM768;
        ssl_certificate      /etc/nginx/ssl/tls.crt;
        ssl_certificate_key  /etc/nginx/ssl/tls.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            # Use variable to defer DNS resolution to runtime
            set $influx_api "https://influxdb:8181";
            proxy_pass $influx_api;
            proxy_ssl_server_name   on;
            proxy_ssl_verify        off;  # Disabling SSL verification for internal communication
            proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout   60s;
            proxy_read_timeout      300s;
        }
    }

    # HTTP/gRPC proxy for Grafana to InfluxDB (workaround for custom CA issue https://github.com/grafana/grafana/issues/105585)
    server {
        listen 8181;
        http2 on;
        server_name _;

        location / {
            # Proxy gRPC requests to HTTPS InfluxDB
            grpc_pass grpcs://influxdb:8181;
            grpc_ssl_verify on;  # Enabling SSL verification for internal communication
            grpc_ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto https;  # Tell InfluxDB the original request was HTTPS
            
            # Timeouts for gRPC
            grpc_connect_timeout 60s;
            grpc_read_timeout 300s;
            grpc_send_timeout 300s;
        }
    }


    # Reverse proxy for Grafana over HTTPS
    server {
        listen 3443 ssl;
        server_name _;
        ssl_protocols     TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers       ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_ecdh_curve    X25519MLKEM768;
        ssl_certificate      /etc/nginx/ssl/tls.crt;
        ssl_certificate_key  /etc/nginx/ssl/tls.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            # Proxy to Grafana container over HTTPS
            proxy_pass https://grafana:3000;
            proxy_ssl_server_name   on;
            proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;            
            # Timeouts
            proxy_connect_timeout   60s;
            proxy_read_timeout      300s;
        }
    }

    # Static site: redirect port 18080 to TLS on 18443, and serve index.html with links, docs, tips
    server {
        listen 18080;
        server_name _;
        return 301 https://$host:18443$request_uri;
    }

    server {
        listen 18443 ssl;
        # May need proper external name i.e. variable replacement for server name to match external TSL cert SAN; {{ proxy_host }}
        server_name _;
        ssl_protocols     TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers       ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_ecdh_curve    X25519MLKEM768;
        ssl_certificate     /etc/nginx/ssl/external/server.crt;
        ssl_certificate_key /etc/nginx/ssl/external/server.key;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }
    }
}
